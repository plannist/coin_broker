<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.broker.front.mapper.CoinMasMapper">

	<resultMap id="coinMas" type="com.coin.broker.front.model.CoinMas">
		<result property="coinType" column="coin_type"/>
		<result property="maxAmt" column="max_amt"/>
		<result property="minIAmt" column="min_i_amt"/>
		<result property="minTAmt" column="min_t_amt"/>
		<collection property="chargeMngs" resultMap="chargeMngs"/>

	</resultMap>

	<resultMap id="chargeMngs" type="com.coin.broker.front.model.CoinChargeMng">
		<result property="coinType" column="coin_type"/>
		<result property="rangeIdx" column="range_idx"/>
		<result property="chargeAmt" column="charge_amt"/>
		<result property="firstIdx" column="first_idx"/>
		<result property="maxId"	column="max_id"/>
	</resultMap>



	<select id="getCoinInfo" resultMap="coinMas">
		/*코인설정정보 조회*/
		select
			a.coin_type,
			max_amt,
			min_i_amt,
			min_t_amt,
			lag(range_idx, 1, -1) over(order by range_idx) +1 first_idx ,
			b.range_idx ,
			b.charge_amt,
			case
				when (select max(range_idx) from coin_charge_mng z) = b.range_idx
				then 1
				else 0
			end max_id
		from
			coin_mas a inner join coin_charge_mng b on a.coin_type = b.coin_type
		where
			a.coin_type = #{coinType}
		order by range_idx
	</select>

	<update id="coinMasUpdate" parameterType="com.coin.broker.front.model.CoinMas">
		update coin_mas
		set
		<if test="maxAmt != null and maxAmt != '' ">
		max_amt = #{maxAmt},
		</if>
		<if test="minIAmt != null and minIAmt != '' ">
		min_i_amt = #{minIAmt},
		</if>
		<if test="minTAmt != null and minTAmt != '' ">
		min_t_amt = #{minTAmt},
		</if>
		mod_dttm = now()
		where
		coin_type = #{coinType}
	</update>

	<insert id="chargeMngMerge" parameterType="com.coin.broker.front.model.CoinChargeMng">
		insert into coin_charge_mng
		(
			coin_type,
			range_idx,
			charge_amt,
			reg_dttm,
			mod_dttm
		)values
	 	(
		  #{coinType},
		  #{rangeIdx},
		  #{chargeAmt},
	 	 now(),
	 	 now()
		 )
		ON DUPLICATE KEY UPDATE
			charge_amt = #{chargeAmt},
			mod_dttm = now()
	</insert>

	<delete id="chargeMngDelete" parameterType="com.coin.broker.front.model.CoinChargeMng">
		delete from coin_charge_mng where coin_type = #{coinType} and range_idx = #{rangeIdx}
	</delete>

	<update id="maxAmtUpdate" parameterType="com.coin.broker.front.model.CoinChargeMng">
		update coin_mas
		set
		    max_amt = (select max(range_idx) from coin_charge_mng where coin_type = #{coinType})
		where
		    coin_type = #{coinType}
	</update>



	<!-- 로컬환경 테스트 mapper -->
	<select id="getCoinInfoTemp" resultMap="coinMas">
		/*코인설정정보 조회*/
		select
			a.coin_type,
			max_amt,
			min_i_amt,
			min_t_amt,
			lag(range_idx, 1, -1) over(order by range_idx) +1 first_idx ,
				b.range_idx ,
			b.charge_amt,
			case
				when (select max(range_idx) from coin_charge_mng_temp z) = b.range_idx
					then 1
				else 0
				end max_id
		from
			coin_mas_temp a inner join coin_charge_mng_temp b on a.coin_type = b.coin_type
		where
			a.coin_type = #{coinType}
		order by range_idx
	</select>

	<insert id="chargeMngMergeTemp" parameterType="com.coin.broker.front.model.CoinChargeMng">
		insert into coin_charge_mng_temp
		(
			coin_type,
			range_idx,
			charge_amt,
			reg_dttm,
			mod_dttm
		)values
			(
				#{coinType},
				#{rangeIdx},
				#{chargeAmt},
				now(),
				now()
			)
			ON DUPLICATE KEY UPDATE
				 charge_amt = #{chargeAmt},
				 mod_dttm = now()
	</insert>

	<update id="coinMasUpdateTemp" parameterType="com.coin.broker.front.model.CoinMas">
		update coin_mas_temp
		set
			max_amt = #{maxAmt},
			min_i_amt = #{minIAmt},
			min_t_amt = #{minTAmt},
			mod_dttm = now()
		where
			coin_type = #{coinType}
	</update>


	<delete id="chargeMngDeleteTemp" parameterType="com.coin.broker.front.model.CoinChargeMng">
		delete from coin_charge_mng_temp where coin_type = #{coinType} and range_idx = #{rangeIdx}
	</delete>

	<update id="maxAmtUpdateTemp" parameterType="com.coin.broker.front.model.CoinChargeMng">
		update coin_mas_temp
		set
			max_amt = (select max(range_idx) from coin_charge_mng_temp where coin_type = #{coinType})
		where
			coin_type = #{coinType}
	</update>



</mapper>